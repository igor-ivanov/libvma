Description:

- This application includes sender, engine, receiver units.
- sender and receiver are located on the same node when engine on another.
- Each connection in sender program constantly sends messages to engine
program at a specific message rate.
- The engine redirect received messages to the connections with receiver process.

How to compile:

- gcc testbed.c -o testbed.out -g -Wall -Werror -DTIMESTAMP_ENABLED=1 -DTIMESTAMP_RDTSC=1 -DNDEBUG -lrt
- gcc testbed.c -o testbed.out -g -Wall -DTIMESTAMP_ENABLED=1 -DTIMESTAMP_RDTSC=1 -DVMA_ZCOPY_ENABLED=1 -DUDP_ENABLED=1 -I/include -L/lib -lrt –lvma

Compilation options:

 -DTIMESTAMP_ENABLED=1
 -DTIMESTAMP_ENABLED=0 (default)

 -DTIMESTAMP_RDTSC=1 - rdtsc based time
 -DTIMESTAMP_RDTSC=0 - clock_gettime() (default ON)

 -DNDEBUG – ON/OFF assert() and log_trace()

 -VMA_ZCOPY_ENABLED=1 - vma_poll() usage
 -VMA_ZCOPY_ENABLED=0 (default)

 -PONG_ENABLED=1
 -PONG_ENABLED=0 (default)

 -UDP_ENABLED=1 - vma_poll() UDP usage
 -UDP_ENABLED=0 (default)

How to use:

 ./testbed.out --help

Pay attention on new values for modes.
--<sender|engine|receiver>=X:Y
X – send to IP
Y – bind to IP (to avoid ANY_ADDR)
 
 ./testbed.out --receiver=:4.4.4.15       --scount=20 --rcount=10 --msg-size=500 --msg-rate=2000 -d4 -n8000
 ./testbed.out --engine=4.4.4.15:4.4.4.16 --scount=20 --rcount=10 --msg-size=500 --msg-rate=2000 -d4 -n8000
 ./testbed.out --sender=4.4.4.16:4.4.4.15 --scount=20 --rcount=10 --msg-size=500 --msg-rate=2000 -d4 -n8000
